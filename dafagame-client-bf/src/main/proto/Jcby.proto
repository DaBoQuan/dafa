syntax = "proto2";

package com.dafagame.protocol.jcby;

//TODO 捕鱼的动作
//登陆广播 其他玩家的信息 存在鱼的信息
//进入已经存在的鱼
//发炮
//击中鱼


//不同技能的动作
//同类炸弹
//连环炸弹
//全屏炸弹

enum ProtoType {
    EnterFishNtfType = 1051;        //进入场景后推送的信息
    UpdateNtfType = 1052;           //更改发送，有生成鱼的信息，有自然死鱼的信息
    FireReqType = 1053;             //发炮请求
    FireResType = 1054;             //发炮回应
    FireNtfType = 1055;             //发炮推送
    HitFishReqType = 1056;          //打中鱼请求
    HitFishResType = 1057;          //打中鱼回应
    HitFishNtfType = 1058;          //打中鱼推送
    ChangeCannonReqType = 1059;     //更改大炮请求
    ChangeCannonResType = 1060;     //更改大炮回应
    ChangeCannonNtfType = 1061;     //更改大炮推送
    LockFishReqType = 1062;         //锁定鱼请求
    LockFishResType = 1063;         //锁定鱼回应
    LockFishNtfType = 1064;         //锁定鱼推送
}
//进入时候对其他玩家的推送

//进入的推送
message EnterFishNtf {
    repeated FishPlayer fishPlayers = 1;    //在线玩家
    repeated AliveFish aliveFishes = 2;     //存活的鱼
}

//生成鱼的推送,自然死鱼
message UpdateNtf {
    repeated Fish genFishes = 1;        //生成鱼的路径
    repeated int32 dieIds = 2;          //死掉的鱼的id列表
}

//***************锁定鱼
//锁定鱼请求
message LockFishReq {
    required int32 fishId = 1;  //锁定鱼的id
}
//锁定鱼回应
message LockFishRes {
    required int32 errCode = 1; //错误码
}
//锁定鱼推送
message LockFishNtf {
    required int32 fishId = 1;  //锁定鱼的id
}

//************更改大炮
//更改大炮请求
message ChangeCannonReq {
    required int32 cannonId = 1;    //更改大炮的id
    required int32 cannonRate = 2;  //更改大炮的倍数
}
//更改大炮回应
message ChangeCannonRes {
    required int32 errCode = 1;     //更改大炮的成功码
}
//更改大炮的推送
message ChangeCannonNtf {
    required int32 cannonId = 1;    //更改大炮的id
    required int32 cannonRate = 2;  //更改大炮倍率
}


//************发炮
message FireReq {
    optional Direction direction = 1; //坐标，如果没有则是上次坐标，如果有则刷新坐标
}

message FireRes {
    optional Direction direction = 1;   //发炮的坐标
    required int32 errCode = 2;         //是否成功发炮
}

message FireNtf {
    optional Direction direction = 1;   //发炮推送
}

message Direction {
    required int32 x = 1;   //x坐标
    required int32 y = 2;   //y坐标
}

//****************打中鱼的
//打鱼请求
message HitFishReq {
    required int32 fishId = 1;  //鱼的id
    required int32 index = 2;   //击中的鱼的下标

    repeated int32 fishesId = 3;//被波及的鱼（可能有带技能的鱼）
}

//打鱼回应
message HitFishRes {
    required int32 errCode = 1; //错误码
}

//打鱼的推送
message HitFishNtf {
    required int32 uid = 1;     //用户id
    required int32 fishId = 2;  //鱼的id
    required int32 index = 3;   //击中的鱼的下标
    repeated int32 fishesId = 6;//打死鱼的id列表

    //获取奖励
    required int64 balance = 4; //余额
    optional int32 award = 5;   //增加金币
}

message FishPlayer {
    required int32 uid = 1;     //用户id
    required double balance = 2; //余额
    required int32 table = 3;   //位置
    required int32 grade = 4;//等级
    required int32 cannonId = 5;//炮台id
    required int32 cannonRate = 6;//炮倍数
}

message AliveFish {
    required Fish fish = 1;           //存活的鱼
    required int32 swimmingTime = 2;    //游动时常
}

message Fish {
    required int32 id = 1;              //鱼的id
    required int32 tempId =2;           //鱼的模版id
    required int32 pathId = 3;          //路径id
    required int32 shape = 4;           //形状
    optional int32 skillId = 5;         //技能id
    repeated bool  fishes = 6;          //鱼存活的信息 true 存活 false 死亡
}