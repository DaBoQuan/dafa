syntax = "proto2";

package com.dafagame.protocol.tb;

//option optimize_for = LITE_RUNTIME;

enum GameType{
	TB = 105;
}
//游戏场景的状态
enum State {
	Beting = 0;     //游戏状态 下注
	Stop = 1;       //停止
	SendCards = 2;  //发牌
	Lottery = 3;    //开奖状态
	Pause = 4;		//暂停
}

// 投注盘口枚举
enum Pos {
	Big = 0;//大
	Small = 1;//小
	Odd= 2;//單
	Even= 3;//雙
	Four= 4;//和值4
	Five= 5;//和值5
	Six= 6;//和值6
	Seven= 7;//和值7
	Eight= 8;//和值8
	Nine= 9;//和值9
	Ten= 10;//和值10
	Eleven= 11;//和值11
	Twelve= 12;//和值12
	Thirteen= 13;//和值13
	Fourteen= 14;//和值14
	Fifteen= 15;//和值15
	Sixteen= 16;//和值16
	Seventeen= 17;//和值17
	OneThreeSame = 18;//豹子1
	TwoThreeSame= 19;//豹子2
	ThreeThreeSame= 20;//豹子3
	FourThreeSame= 21;//豹子4
	FiveThreeSame= 22;//豹子5
	SixThreeSame= 23;//豹子6
	AnyThreeSam=24;//任意豹子
	OneOneTwoThree= 25;//單雙三骰1
	TwoOneTwoThree= 26;//單雙三骰２
	ThreeOneTwoThree= 27;//單雙三骰3
	FourOneTwoThree= 28;//單雙三骰4
	FiveOneTwoThree= 29;//單雙三骰5
	SixOneTwoThree= 30;//單雙三骰6

}

enum ResultState {
	Lose = 1;  //输
	Win = 2;   //赢
}
//场次类型
enum RoundType {
	Round4 = 101;                  //四倍场

}

//消息号
enum ProtoType {

	BetReqType = 10555;               //下注请求

	BetResType = 10556;               //下注回应

	GoUpBankerReqType = 10557;        //抢庄请求

	GoUpBankerResType = 10558;        //抢庄回应

	BankerListType = 10559;           //上庄列表数据

//	BankerInfoType = 10560;           //庄家信息通知

	//CountReqType = 10561;             //输赢结果统计请求

	//CountResType = 10562;             //赢得次数回应

	StartNtfType = 10563;             //游戏开始通知

	PokerInfoNtfType = 10564;         //桌子扑克信息通知

	LotteryNtfType = 10565;           //结算状态通知

	EnterPlayerSceneNtfType = 10566;  //百人进入场景的推送信息通知(包括断线重连进来)

	//RankSettleNtfType = 10567;        //特殊玩家结算通知

	PlayResultType = 10568;           //输赢结果通知

	RankNtfType = 10569;              //结算后的排行榜信息

	BetNtfType = 10570;               //每桌的投注广播 每秒广播一次

	SpecialBetNtfType = 10571;        //特殊玩家投注广播

	OnlineNumberNtfType = 10572;      //在线人数广播

	GameMaintainNtfType = 10573;      //游戏维护

	GamePauseNtfType = 10574;         //游戏暂停

	GameRuleReqType = 10575;

	GameRuleResType = 10576;

	DownBankerReqType = 10577;      //取消上庄

	DownBankerResType = 10578;

	ContinueBetReqType = 10579;		//续投

	ScenesReqType = 10580;

}

//
enum ErrorCode {
	OK = 1;
	ChipError = 2;                  //筹码错误
	PosError = 3;                   //盘口错误
	BankerBanBet = 4;               //庄家禁止下注
	StateError = 5;                 //状态错误
	NoMoney = 6;    //余额不足
	BankerNoMoney = 7; //庄家钱不够赔
	BetFull = 8;                    //达到下注限制
	BankerQueueFull = 9;            //上庄列表已满
	InBankerList = 10;              //已在上庄列表中
	NextInningDown = 11;            //上庄中 下局下庄
	NotInBankerList = 12;           //不在上庄列表中
	Continued = 13;		//续投过了
	NoBeted = 14;		//没有投过注
	ContinueNoMoney = 15;	//续投余额不足
	ContinueBankerNoMoney = 16; //续投庄家不够赔
	ContinueOk = 17;		//续成功
	Failure = 18;			//失败
	TestBanBet = 19;                //玩家上庄测试账号不能下注
	BanPlayerBanker = 20;           //禁止玩家上庄
	BanRobotBanker = 21;            //禁止机器人上庄
}

//下注请求
message BetReq {
	repeated BetInfo betInfo = 1;
}

message BetInfo {
	required Pos pos = 1;           //押注区域
	repeated int32 amount = 2;      //选择金额
}
//下注回应
message BetRes {
	repeated BetInfo betInfo = 1;
	optional int64 total = 3;
	optional ErrorCode errorCode = 2;
}

//特殊玩家投注广播
message SpecialBetNtf {
	required int32 userId = 1;
	repeated BetInfo betInfo = 2;
}

//抢庄请求
message GoUpBankerReq {
}

//抢庄回应
message GoUpBankerRes {
	required ErrorCode errorCode = 1;
	optional string msg = 2;
}

//上庄列表数据
message BankerList{
	repeated BankerInfo bankerInfo = 1;
	required bool haveBanker = 2;   //是否有庄家
}


//庄家信息
message BankerInfo {
	optional string nickName = 1;          //庄家昵称
	optional string balance = 2;	//庄家的余额
	optional int32 grade = 3;               //庄家vip等级
	optional int32 avatar = 4;             //头像
	optional int32 frame = 5;               //相框
	optional int32 userId = 6;
	optional int32 type = 7;                //判断是否是真人 机器人服务用

}

////输赢结果统计请求
//message CountReq {
//}
//
////赢得次数回应
//message CountRes {
//    optional int32 roundCount = 1;         //总次数
//    optional string winCount = 2;          //四个盘口赢得次数统计[100,50,500,332]
//}

//游戏开始通知
message StartNtf {
	required string inning = 1;             //局号
	required int32 countDown = 2;          //时间
	optional bool canBet = 3;               //是否能投注 机器人服务用
	//optional BankerInfo bankerInfo = 3;    //庄家信息
}

//结算状态通知
message LotteryNtf {
	optional int32 countDown = 1;          //倒计时时间
}

//桌子扑克信息通知 包含庄家牌
message PokerInfoNtf {
	optional string pokerState = 1;         //输赢 庄家用 正 赢 负 输
	optional string pokerType = 2;          //牌型
	optional string poker = 3;              //扑克牌信息
}

//桌子扑克信息
//message PokerInfo {
//	optional ResultState state = 1;  //输赢 庄家用
//	required PokerType type = 2;     //牌型
//	repeated int32 poker = 3;       //扑克牌信息
//	optional int64 amount = 4;       //盘口的钱
//}

// 玩家详细下注信息
message PlayerBetInfo {
	repeated int32 betList = 2;            // 区域下注明细
}

//进入场景的推送信息通知(包括断线重连进来)
message EnterPlayerSceneNtf {
	required State state = 1; //游戏状态
	optional int32 remainingTime = 2; //状态剩余时间
	repeated string tableRecordList = 3; //桌子的走势
	optional int32 bankerNeedMoney = 4; //上庄需要的钱数
	repeated int64 playerAreaBet = 5; //玩家各区域的投注
	repeated SpeacialPlayerInfo speacialBet = 6; //特殊玩家下注信息
	repeated int64 roomAreaBet = 7; //房间四个盘口的下注金额
	repeated int32 stateTime = 8;
	required string roundType = 9; //场次类型
	required string roomId = 10; //房间号
	required string inning = 11; //期号
	optional string balance = 14; //玩家的余额
	optional int32 onlineNumber = 15; //在线人数
	optional bool canContinueBet = 16;					//能否续投
	optional BankerList bankerList = 17; //庄家列表信息
	repeated int32 multipleEnum = 18; //赔率配置
	repeated int32 chipEnum = 19; //投注配置
	optional int32 minBetNeed = 20; //房间最低下注本金
	optional string pokerState = 21; //输赢 庄家用 正 赢 负 输
	optional string pokerType = 22; //牌型
	optional string poker = 23; //扑克牌信息
	repeated int32 histroyTimes = 24; //历史次数统计
	optional int32 bankerTimes = 25;        //上庄次数

}

//玩家展示信息
//message DisplayPlayerInfo {
//	optional int64 uid = 1;			        //玩家id
//	optional string balance = 2;		    //玩家余额
//	optional string avatar = 3;		        //玩家头像信息
//	optional int32 grade = 4;               //vip等级
//	optional string nick_name = 5;          //昵称
//	optional int32 win_count = 6;           //神算子赢的次数
//}

//桌子的走势记录
//message TableRecord {
//	repeated int32 record_list = 1;
//}

//特殊玩家通知 结算时通知展示特殊玩家收益效果
//message RankSettleNtf {
//    repeated SpeacialPlayerInfo rankList = 1; //玩家排名的通知
//    optional SpeacialPlayerInfo banker = 2;    //庄稼输赢的分数
//}

//特殊玩家信息
message SpeacialPlayerInfo {
	required int32 userId = 1;           //玩家id
	optional double winAmount = 2;	//玩家赢取的金币 扣除了服务费
	optional string balance = 3;            //玩家余额
	repeated int64 areaBet = 4;		        //各区域下注
	repeated int64 areaWin = 5;		//各区域赢 没有扣除服务费
}

//玩家输赢结果通知
message PlayResult {
	optional int64 addAmount = 1;		//金钱变化 没有扣除服务费
	optional double tax = 2;			//服务费
	repeated int64 addAmountList = 3;  //玩家四个盘口分别增加的金币的列表 没有扣除服务费
	optional string balance = 4;            //最新余额
	repeated SpeacialPlayerInfo rankList = 5; //特殊玩家
	optional SpeacialPlayerInfo banker = 6;    //庄家
	optional string pokerState = 7;        //输赢 庄家用 正 赢 负 输
	optional string pokerType = 8;         //牌型  //大/小 单/双 是否豹子(1|0) 三个骰子总数 三个骰子分数
	optional string poker = 9;             //扑克牌信息
	optional double otherTotal = 10;	//其他玩家总输赢 扣除服务费 不包含特殊玩家
}

//排行榜信息
message RankNtf {
	repeated RankInfo rankList = 1;
}

//排行榜信息
message RankInfo {
	optional int32 userId = 1;
	optional int32 avatar = 2;
	optional string nickName = 3;
	optional int32 grade = 4;
	optional string balance = 5;
	optional int64 bettingAmount = 6;
	optional int32 winTimes = 7;
	optional int32 frame = 8;
}

//每桌的投注通知 每秒广播一次 不包含特殊玩家
message BetNtf {
	repeated int64 areaAmount = 1;         //各区域投注统计
	repeated BetDataInfo betDataInfo = 2; //投注详细
	optional int32 onlineNumber = 3; //在线人数
}

message BetDataInfo{
	optional int32 userId = 1;
	optional int32 amount = 2;
	optional int32 betArea = 3;
}
//人数广播
message OnlineNumberNtf {
	optional int32 number = 1;              //在线人数
}

//
message AreaBetInfo {
	// 下注区域
	required Pos pos = 1;
	// 对应的筹码列表
	repeated int32 amountList = 2;
}

message GameMaintainNtf {
	optional int32 state = 1;               //0开启  1 维护
}

message GamePauseNtf {
	optional int32 state = 1;               //0开启  1 暂停
}

message GameRuleReq{
}

message GameRuleRes{
	optional double service = 1;             //服务费
}

message DownBankerReq{

}

message DownBankerRes{
	optional ErrorCode code = 1;
}
message ContinueBetReq{

}
