syntax = "proto2";

package com.dafagame.protocol.world;
//所有消息以Req，Res，Ntf结尾的是data里的内容
//req表示请求 res表示回应 ntf表示通知

//游戏服务间通讯的数据结构
message Msg {
    optional MsgSend sendMsg = 1;           //游戏服务发送给网关的推送，通知一些人信息
    optional MsgReceive receiveMsg = 2;     //网关发送给游戏服务的信息 游戏服务处理的信息
    optional MsgIndication indication = 3;  //游戏服务发送给网关的房间推送
}

message MsgReceive {
    optional int32 uid = 1;         //需要处理消息的用户id
    required int32 protoType = 2;   //协议号码
    required bytes data = 3;        //协议的内容
}

message MsgSend{
    repeated int32 uids = 1;        //需要通知的玩家id列表
    required int32 protoType = 2;   //协议号码
    required bytes data = 3;        //内容
}

message MsgIndication {
    required string serverId = 1;   //服务id
    required string roomId = 2;      //房间标签
    required int32 proto = 3;       //房间广播
    required bytes data = 4;        //发送的内容
}

//world消息区间1000 - 1100
enum ProtoType{
    EnterGameReqType = 1000;    //进入游戏请求
    EnterGameResType = 1001;    //进入游戏回应
    ExitGameReqType = 1002;     //离开游戏请求
    ExitGameResType = 1003;     //离开游戏回应
    ErrorNtfType = 1004;        //错误通知
}

enum ErrorCode{
    OK = 1;
    NoMoney = 2; //余额未达到最低进入标准
    PlayerFull = 3; //人数已满
    GameMaintain = 4;//游戏维护
    GameStop = 5; //游戏暂停
    MoreMoney = 6; //余额超过最高上限
    NoRound = 7; //场次不存在
    InOtherGame = 8; //在其他游戏中
    NoSeat = 9; //没找到座位
    NullPlayer = 10; //玩家不存在
    NotLogin = 11;//玩家没有登陆
    NoRoom = 12; //房间不存在
    RmiError = 13; //服务调用错误
    BalanceError = 14; //余额服务错误
    IllegalParamError = 15;//非法参数
    EntryProcess = 16;  //在进入过程中，游戏服务没有给回应
    NotInGame = 17;     //不在游戏中，请进入游戏
    ServerError = 18;   //服务错误
    LoginAtOtherDevice = 19;//在其他终端登陆
}

enum ExitGameReason {
    Usually = 1;    //用户主动离开
    Kick    = 2;    //踢出
    OffLine = 3;    //离线
    LoginOtherDevice = 4;//在其他终端登陆
    VersionUpdate = 5; //系统升级
}

// 进入场景请求
message EnterGameReq {
    //进入的游戏id
    required string gameCode = 1;
    // 场景类型
    required string roundType = 2;
    // 玩家
    optional Player player = 3;
}

//进入场景回应
message EnterGameRes{
    // 场景类型
    optional string roundType = 1;

    //返回码
    required ErrorCode errorCode = 2; //0成功 1余额未达到最低进入标准 2人数已满 3游戏维护 4余额超过最高上限 5游戏场次不存(错误码与ErrorCode一致)
    //6在其他游戏中  7没找到位置

    //描述信息
    optional string msg = 3;

    //房间id
    optional string roomId = 4;
    //游戏id
    optional string gameCode = 5;
    //子游戏id
    optional string subServerId = 6;
}

//退出游戏请求
message ExitGameReq{
    required int32 reason = 1;  //离开原因
}

//退出游戏返回
message ExitGameRes{
    //返回码
    required ErrorCode errorCode = 1; //0成功 1失败

    //描述信息
    optional string msg = 2;
}

//游戏跑马灯推送
message GameLampNtf {
    repeated string arrays = 1; //  跑马灯参数，根据不同游戏有不同的长度
}

message Player {
    required int32 uid = 1;         //玩家id
    required string userName = 2;   //用户名
    required string nickName = 3;   //昵称
    required int32 avatar = 4;    //头像
    required int32 grade = 5;       //vip 等级
    required string tenantCode = 6; //站长编码
    required int32 sourceId = 7;    //终端
    required int32 userType = 8;    //账号类型
    required int32 proxyGrade = 9;  //代理等级
    required int32 frameId = 10;    //头像id

    //游戏中自己获取
    optional double balance = 11;    //余额
    optional double safeBalance = 12;   //保险箱余额
}

message ErrorNtf {
    required int32 err = 1; //错误消息
}